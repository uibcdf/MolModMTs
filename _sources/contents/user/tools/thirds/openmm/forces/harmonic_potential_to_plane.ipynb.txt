{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "2220dee4-4bed-4435-ab24-b172c8d7afc6",
   "metadata": {},
   "source": [
    "# Harmonic potential to plane"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "5bc8f6b1-7701-4b26-bc45-649a4bb3607b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "43503f06091d49dfafb5fad98ec4fae6",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": []
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import numpy as np\n",
    "import molsysmt as msm\n",
    "import openmm as mm\n",
    "import openmm.unit as u"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "2ffecc05-9a37-4d07-b868-2d7002d59130",
   "metadata": {},
   "outputs": [],
   "source": [
    "system = mm.System()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "8a64231e-df5b-4753-853d-b90998a26c49",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "system.addParticle(1.0*u.amu)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "120f6468-4457-4d8b-bcb9-9dd664f179d1",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Periodic box vectors.\n",
    "a = [5.0, 0.0, 0.0]*u.nanometer\n",
    "b = [0.0, 5.0, 0.0]*u.nanometer\n",
    "c = [0.0, 0.0, 5.0]*u.nanometer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c0c195a4-52b9-4bc7-9281-8d0e1e427d8e",
   "metadata": {},
   "outputs": [],
   "source": [
    "system.setDefaultPeriodicBoxVectors(a, b, c)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "d8d58c14-523b-4bbc-b621-2a6b31b84afd",
   "metadata": {},
   "outputs": [],
   "source": [
    "step_size = 0.1*u.femtoseconds\n",
    "\n",
    "integrator = mm.VerletIntegrator(step_size)\n",
    "\n",
    "# Creación de la plataforma.\n",
    "\n",
    "platform_name = 'CPU'\n",
    "platform = mm.Platform.getPlatformByName(platform_name)\n",
    "\n",
    "# Creación del contexto.\n",
    "\n",
    "context = mm.Context(system, integrator, platform)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "411f590a-d0cd-4d38-9254-a0cd5327a75b",
   "metadata": {},
   "outputs": [],
   "source": [
    "positions = np.zeros([1, 3], np.float32) * u.nanometer\n",
    "velocities = np.zeros([1, 3], np.float32) * u.nanometer/u.picoseconds\n",
    "\n",
    "context.setPositions(positions)\n",
    "context.setVelocities(velocities)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2bae355c-cfd2-4866-9136-d07488a6b409",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Quantity(value=0.0, unit=kilojoule/mole)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "context.getState(getEnergy=True).getPotentialEnergy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "418824d8-f18a-4f0a-b5b1-5167f5bfe62c",
   "metadata": {},
   "outputs": [],
   "source": [
    "zs = np.linspace(-5.0,5.0,100)*u.nanometer"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "70e8b592-bd08-473a-9b44-435b096d515f",
   "metadata": {},
   "outputs": [],
   "source": [
    "U_before = np.zeros([100], np.float32) * u.kilojoules_per_mole"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "8ecd925f-21da-4dc6-b51f-3c6f9aaf2dec",
   "metadata": {},
   "outputs": [],
   "source": [
    "for ii in range(100):\n",
    "    positions[0,2]=zs[ii]\n",
    "    context.setPositions(positions)\n",
    "    U_before[ii]=context.getState(getEnergy=True).getPotentialEnergy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "40d7d102-8854-467d-baf3-6adc5770501c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Quantity(value=array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
       "       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
       "       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
       "       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
       "       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n",
       "       0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],\n",
       "      dtype=float32), unit=kilojoule/mole)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "U_before"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.14"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
